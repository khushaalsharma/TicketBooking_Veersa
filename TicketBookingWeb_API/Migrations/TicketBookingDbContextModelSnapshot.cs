// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketBookingWeb_API.DatabaseContext;

#nullable disable

namespace TicketBookingWeb_API.Migrations
{
    [DbContext(typeof(TicketBookingDbContext))]
    partial class TicketBookingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TicketBookingWeb_API.Data.Models.Events", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DateAndTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventVenue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bd759470-fed0-4b95-b0f5-602959f29682"),
                            DateAndTime = "23-09-2024 12:00 PM",
                            EventDescription = "A leading conference on emerging technologies including AI, Blockchain, and Quantum Computing.",
                            EventName = "Tech Conference 2024",
                            EventVenue = "Bharat Mandapam, Pragati Maidan, Delhi",
                            TicketPrice = 2000
                        },
                        new
                        {
                            Id = new Guid("dbe68caf-5b9f-4af9-971a-93f65f15b221"),
                            DateAndTime = "26-10-2024 7:00 PM",
                            EventDescription = "A night of live music performances by Diljit Dosanjh",
                            EventName = "Dilluminati",
                            EventVenue = "JLN Stadium, Delhi",
                            TicketPrice = 13000
                        },
                        new
                        {
                            Id = new Guid("362676cd-ff9e-4274-b275-32cce4258ef8"),
                            DateAndTime = "30-09-2024 12:00 PM",
                            EventDescription = "Explore gourmet food and exquisite wines from around the world.",
                            EventName = "Food Mela",
                            EventVenue = "Noida Expo Centre, Noida",
                            TicketPrice = 500
                        },
                        new
                        {
                            Id = new Guid("f5f64c28-64d0-4775-b244-a708ea53b728"),
                            DateAndTime = "25-09-2024 6:00 PM",
                            EventDescription = "Laughout Loud with Zakir Khan's crazy anecdotes",
                            EventName = "Comedy Night with Zakir Khan",
                            EventVenue = "Comedy Club, Gurgaon",
                            TicketPrice = 1500
                        },
                        new
                        {
                            Id = new Guid("6434842b-01c6-482e-aefd-937205a787b3"),
                            DateAndTime = "01-10-2024 12:00 PM",
                            EventDescription = "Celebrate the innovative tech startups at TechCrunch Disrupt",
                            EventName = "TechCrunch Disrupt",
                            EventVenue = "Manekshaw Centre, Delhi",
                            TicketPrice = 2000
                        });
                });

            modelBuilder.Entity("TicketBookingWeb_API.Data.Models.Tickets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TicketQty")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventsId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("TicketBookingWeb_API.Data.Models.Tickets", b =>
                {
                    b.HasOne("TicketBookingWeb_API.Data.Models.Events", "events")
                        .WithMany()
                        .HasForeignKey("EventsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("events");
                });
#pragma warning restore 612, 618
        }
    }
}
